/*
 * generated by Xtext 2.19.0
 */
parser grammar InternalRpgleParser;

options {
	tokenVocab=InternalRpgleLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.sitemule.rpglanguage.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sitemule.rpglanguage.services.RpgleGrammarAccess;

}

@members {

 	private RpgleGrammarAccess grammarAccess;

    public InternalRpgleParser(TokenStream input, RpgleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Language";
   	}

   	@Override
   	protected RpgleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleLanguage
entryRuleLanguage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageRule()); }
	iv_ruleLanguage=ruleLanguage
	{ $current=$iv_ruleLanguage.current; }
	EOF;

// Rule Language
ruleLanguage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLanguageAccess().getElementsComponentsParserRuleCall_0());
			}
			lv_elements_0_0=ruleComponents
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLanguageRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.sitemule.rpglanguage.Rpgle.Components");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleComponents
entryRuleComponents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsRule()); }
	iv_ruleComponents=ruleComponents
	{ $current=$iv_ruleComponents.current; }
	EOF;

// Rule Components
ruleComponents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentsAccess().getCtrloptParserRuleCall_0());
		}
		this_Ctrlopt_0=ruleCtrlopt
		{
			$current = $this_Ctrlopt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentsAccess().getDirectiveParserRuleCall_1());
		}
		this_Directive_1=ruleDirective
		{
			$current = $this_Directive_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentsAccess().getDeclareParserRuleCall_2());
		}
		this_Declare_2=ruleDeclare
		{
			$current = $this_Declare_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCtrlopt
entryRuleCtrlopt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCtrloptRule()); }
	iv_ruleCtrlopt=ruleCtrlopt
	{ $current=$iv_ruleCtrlopt.current; }
	EOF;

// Rule Ctrlopt
ruleCtrlopt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CtlOpt
		{
			newLeafNode(otherlv_0, grammarAccess.getCtrloptAccess().getCtlOptKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCtrloptAccess().getOptOptParserRuleCall_1_0());
				}
				lv_opt_1_0=ruleOpt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCtrloptRule());
					}
					add(
						$current,
						"opt",
						lv_opt_1_0,
						"org.sitemule.rpglanguage.Rpgle.Opt");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getCtrloptAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleOpt
entryRuleOpt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptRule()); }
	iv_ruleOpt=ruleOpt
	{ $current=$iv_ruleOpt.current; }
	EOF;

// Rule Opt
ruleOpt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getOptAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=LeftParenthesis
			{
				newLeafNode(otherlv_1, grammarAccess.getOptAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_value_2_0=RULE_STRING
					{
						newLeafNode(lv_value_2_0, grammarAccess.getOptAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOptRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_3=RightParenthesis
			{
				newLeafNode(otherlv_3, grammarAccess.getOptAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleDirective
entryRuleDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveRule()); }
	iv_ruleDirective=ruleDirective
	{ $current=$iv_ruleDirective.current; }
	EOF;

// Rule Directive
ruleDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Include
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectiveAccess().getIncludeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDirectiveAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectiveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getDirectiveAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDeclare
entryRuleDeclare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclareRule()); }
	iv_ruleDeclare=ruleDeclare
	{ $current=$iv_ruleDeclare.current; }
	EOF;

// Rule Declare
ruleDeclare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclareAccess().getDclprocParserRuleCall_0());
		}
		this_Dclproc_0=ruleDclproc
		{
			$current = $this_Dclproc_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclareAccess().getDclsParserRuleCall_1());
		}
		this_Dcls_1=ruleDcls
		{
			$current = $this_Dcls_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclareAccess().getDclfParserRuleCall_2());
		}
		this_Dclf_2=ruleDclf
		{
			$current = $this_Dclf_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDclf
entryRuleDclf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDclfRule()); }
	iv_ruleDclf=ruleDclf
	{ $current=$iv_ruleDclf.current; }
	EOF;

// Rule Dclf
ruleDclf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DclF
		{
			newLeafNode(otherlv_0, grammarAccess.getDclfAccess().getDclFKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDclfAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDclfRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getDclfAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleFileio
entryRuleFileio returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFileioRule()); }
	iv_ruleFileio=ruleFileio
	{ $current=$iv_ruleFileio.current; }
	EOF;

// Rule Fileio
ruleFileio returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFileioAccess().getOpenParserRuleCall_0());
		}
		this_Open_0=ruleOpen
		{
			$current = $this_Open_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getCloseParserRuleCall_1());
		}
		this_Close_1=ruleClose
		{
			$current = $this_Close_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getChainParserRuleCall_2());
		}
		this_Chain_2=ruleChain
		{
			$current = $this_Chain_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getReadParserRuleCall_3());
		}
		this_Read_3=ruleRead
		{
			$current = $this_Read_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getReadeParserRuleCall_4());
		}
		this_Reade_4=ruleReade
		{
			$current = $this_Reade_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getSetllParserRuleCall_5());
		}
		this_Setll_5=ruleSetll
		{
			$current = $this_Setll_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getSetgtParserRuleCall_6());
		}
		this_Setgt_6=ruleSetgt
		{
			$current = $this_Setgt_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getEofParserRuleCall_7());
		}
		this_Eof_7=ruleEof
		{
			$current = $this_Eof_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFileioAccess().getRnfParserRuleCall_8());
		}
		this_Rnf_8=ruleRnf
		{
			$current = $this_Rnf_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpen
entryRuleOpen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpenRule()); }
	iv_ruleOpen=ruleOpen
	{ $current=$iv_ruleOpen.current; }
	EOF;

// Rule Open
ruleOpen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Open
		{
			newLeafNode(otherlv_0, grammarAccess.getOpenAccess().getOpenKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOpenRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getOpenAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleClose
entryRuleClose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloseRule()); }
	iv_ruleClose=ruleClose
	{ $current=$iv_ruleClose.current; }
	EOF;

// Rule Close
ruleClose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Close
		{
			newLeafNode(otherlv_0, grammarAccess.getCloseAccess().getCloseKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCloseRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCloseAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleChain
entryRuleChain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChainRule()); }
	iv_ruleChain=ruleChain
	{ $current=$iv_ruleChain.current; }
	EOF;

// Rule Chain
ruleChain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Chain
		{
			newLeafNode(otherlv_0, grammarAccess.getChainAccess().getChainKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChainRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getChainAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRead
entryRuleRead returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadRule()); }
	iv_ruleRead=ruleRead
	{ $current=$iv_ruleRead.current; }
	EOF;

// Rule Read
ruleRead returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Read
		{
			newLeafNode(otherlv_0, grammarAccess.getReadAccess().getReadKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getReadAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleReade
entryRuleReade returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadeRule()); }
	iv_ruleReade=ruleReade
	{ $current=$iv_ruleReade.current; }
	EOF;

// Rule Reade
ruleReade returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Reade
		{
			newLeafNode(otherlv_0, grammarAccess.getReadeAccess().getReadeKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadeRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getReadeAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSetll
entryRuleSetll returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetllRule()); }
	iv_ruleSetll=ruleSetll
	{ $current=$iv_ruleSetll.current; }
	EOF;

// Rule Setll
ruleSetll returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Setll
		{
			newLeafNode(otherlv_0, grammarAccess.getSetllAccess().getSetllKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetllRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSetllAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSetgt
entryRuleSetgt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetgtRule()); }
	iv_ruleSetgt=ruleSetgt
	{ $current=$iv_ruleSetgt.current; }
	EOF;

// Rule Setgt
ruleSetgt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Setgt
		{
			newLeafNode(otherlv_0, grammarAccess.getSetgtAccess().getSetgtKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetgtRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSetgtAccess().getNameDclfCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEof
entryRuleEof returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEofRule()); }
	iv_ruleEof=ruleEof
	{ $current=$iv_ruleEof.current; }
	EOF;

// Rule Eof
ruleEof returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Eof
		{
			newLeafNode(otherlv_0, grammarAccess.getEofAccess().getEofKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getEofAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEofRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEofAccess().getNameDclfCrossReference_2_0());
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getEofAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRnf
entryRuleRnf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRnfRule()); }
	iv_ruleRnf=ruleRnf
	{ $current=$iv_ruleRnf.current; }
	EOF;

// Rule Rnf
ruleRnf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Rnf
		{
			newLeafNode(otherlv_0, grammarAccess.getRnfAccess().getRnfKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getRnfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRnfRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getRnfAccess().getNameDclfCrossReference_2_0());
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getRnfAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleDclproc
entryRuleDclproc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDclprocRule()); }
	iv_ruleDclproc=ruleDclproc
	{ $current=$iv_ruleDclproc.current; }
	EOF;

// Rule Dclproc
ruleDclproc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DclProc
		{
			newLeafNode(otherlv_0, grammarAccess.getDclprocAccess().getDclProcKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDclprocAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDclprocRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getDclprocAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDclprocAccess().getDeclareDeclareParserRuleCall_3_0());
				}
				lv_declare_3_0=ruleDeclare
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDclprocRule());
					}
					add(
						$current,
						"declare",
						lv_declare_3_0,
						"org.sitemule.rpglanguage.Rpgle.Declare");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDclprocAccess().getCodeCodeParserRuleCall_4_0());
				}
				lv_code_4_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDclprocRule());
					}
					add(
						$current,
						"code",
						lv_code_4_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5=EndProc
		{
			newLeafNode(otherlv_5, grammarAccess.getDclprocAccess().getEndProcKeyword_5());
		}
	)
;

// Entry rule entryRuleCode
entryRuleCode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeRule()); }
	iv_ruleCode=ruleCode
	{ $current=$iv_ruleCode.current; }
	EOF;

// Rule Code
ruleCode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCodeAccess().getStmtParserRuleCall_0_0());
			}
			this_Stmt_0=ruleStmt
			{
				$current = $this_Stmt_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getCodeAccess().getSubrutineParserRuleCall_0_1());
			}
			this_Subrutine_1=ruleSubrutine
			{
				$current = $this_Subrutine_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getCodeAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleSubrutine
entryRuleSubrutine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubrutineRule()); }
	iv_ruleSubrutine=ruleSubrutine
	{ $current=$iv_ruleSubrutine.current; }
	EOF;

// Rule Subrutine
ruleSubrutine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Begsr
		{
			newLeafNode(otherlv_0, grammarAccess.getSubrutineAccess().getBegsrKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubrutineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubrutineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getSubrutineAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubrutineAccess().getSubrcodeCodeParserRuleCall_3_0());
				}
				lv_subrcode_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubrutineRule());
					}
					add(
						$current,
						"subrcode",
						lv_subrcode_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=Endsr
		{
			newLeafNode(otherlv_4, grammarAccess.getSubrutineAccess().getEndsrKeyword_4());
		}
	)
;

// Entry rule entryRuleExsr
entryRuleExsr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExsrRule()); }
	iv_ruleExsr=ruleExsr
	{ $current=$iv_ruleExsr.current; }
	EOF;

// Rule Exsr
ruleExsr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Exsr
		{
			newLeafNode(otherlv_0, grammarAccess.getExsrAccess().getExsrKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExsrRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExsrAccess().getNameSubrutineCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	iv_ruleStmt=ruleStmt
	{ $current=$iv_ruleStmt.current; }
	EOF;

// Rule Stmt
ruleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStmtAccess().getAssignmentParserRuleCall_0());
		}
		this_Assignment_0=ruleAssignment
		{
			$current = $this_Assignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getIfblockParserRuleCall_1());
		}
		this_Ifblock_1=ruleIfblock
		{
			$current = $this_Ifblock_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getDoParserRuleCall_2());
		}
		this_Do_2=ruleDo
		{
			$current = $this_Do_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getDowParserRuleCall_3());
		}
		this_Dow_3=ruleDow
		{
			$current = $this_Dow_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getDouParserRuleCall_4());
		}
		this_Dou_4=ruleDou
		{
			$current = $this_Dou_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getForParserRuleCall_5());
		}
		this_For_5=ruleFor
		{
			$current = $this_For_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getSelectblockParserRuleCall_6());
		}
		this_Selectblock_6=ruleSelectblock
		{
			$current = $this_Selectblock_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getExsrParserRuleCall_7());
		}
		this_Exsr_7=ruleExsr
		{
			$current = $this_Exsr_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getFileioParserRuleCall_8());
		}
		this_Fileio_8=ruleFileio
		{
			$current = $this_Fileio_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getReturnParserRuleCall_9());
		}
		this_Return_9=ruleReturn
		{
			$current = $this_Return_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getVariableDclsCrossReference_0_0());
				}
			)
		)
		otherlv_1=EqualsSign
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.sitemule.rpglanguage.Rpgle.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_intval_0_0=RULE_INT
				{
					newLeafNode(lv_intval_0_0, grammarAccess.getExpressionAccess().getIntvalINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"intval",
						lv_intval_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				lv_strval_1_0=RULE_STRING
				{
					newLeafNode(lv_strval_1_0, grammarAccess.getExpressionAccess().getStrvalSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"strval",
						lv_strval_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getVarDclsCrossReference_2_0());
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBifParserRuleCall_3());
		}
		this_Bif_3=ruleBif
		{
			$current = $this_Bif_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getProcvalDclprocCrossReference_4_0_0());
					}
				)
			)
			otherlv_5=LeftParenthesis
			{
				newLeafNode(otherlv_5, grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getParmlistParmlistParserRuleCall_4_2_0());
					}
					lv_parmlist_6_0=ruleParmlist
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						add(
							$current,
							"parmlist",
							lv_parmlist_6_0,
							"org.sitemule.rpglanguage.Rpgle.Parmlist");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7=RightParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getExpressionAccess().getRightParenthesisKeyword_4_3());
			}
		)
	)
;

// Entry rule entryRuleBif
entryRuleBif returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBifRule()); }
	iv_ruleBif=ruleBif
	{ $current=$iv_ruleBif.current; }
	EOF;

// Rule Bif
ruleBif returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBifAccess().getEofParserRuleCall_0());
		}
		this_Eof_0=ruleEof
		{
			$current = $this_Eof_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBifAccess().getRnfParserRuleCall_1());
		}
		this_Rnf_1=ruleRnf
		{
			$current = $this_Rnf_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParmlist
entryRuleParmlist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParmlistRule()); }
	iv_ruleParmlist=ruleParmlist
	{ $current=$iv_ruleParmlist.current; }
	EOF;

// Rule Parmlist
ruleParmlist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParmlistAccess().getParm1ParserRuleCall_0());
		}
		this_Parm1_0=ruleParm1
		{
			$current = $this_Parm1_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParmlistAccess().getParmsParm2ParserRuleCall_1_0());
				}
				lv_parms_1_0=ruleParm2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParmlistRule());
					}
					add(
						$current,
						"parms",
						lv_parms_1_0,
						"org.sitemule.rpglanguage.Rpgle.Parm2");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleParm1
entryRuleParm1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParm1Rule()); }
	iv_ruleParm1=ruleParm1
	{ $current=$iv_ruleParm1.current; }
	EOF;

// Rule Parm1
ruleParm1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getParm1Access().getParmExpressionParserRuleCall_0());
			}
			lv_parm_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getParm1Rule());
				}
				set(
					$current,
					"parm",
					lv_parm_0_0,
					"org.sitemule.rpglanguage.Rpgle.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleParm2
entryRuleParm2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParm2Rule()); }
	iv_ruleParm2=ruleParm2
	{ $current=$iv_ruleParm2.current; }
	EOF;

// Rule Parm2
ruleParm2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Colon
		{
			newLeafNode(otherlv_0, grammarAccess.getParm2Access().getColonKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getParm2Access().getParm1ParserRuleCall_1());
		}
		this_Parm1_1=ruleParm1
		{
			$current = $this_Parm1_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIfblock
entryRuleIfblock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfblockRule()); }
	iv_ruleIfblock=ruleIfblock
	{ $current=$iv_ruleIfblock.current; }
	EOF;

// Rule Ifblock
ruleIfblock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIfblockAccess().getIfParserRuleCall_0());
		}
		this_If_0=ruleIf
		{
			$current = $this_If_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfblockAccess().getIfcodeElseifParserRuleCall_1_0());
				}
				lv_ifcode_1_0=ruleElseif
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfblockRule());
					}
					add(
						$current,
						"ifcode",
						lv_ifcode_1_0,
						"org.sitemule.rpglanguage.Rpgle.Elseif");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getIfblockAccess().getIfcodeElseParserRuleCall_2_0());
				}
				lv_ifcode_2_0=ruleElse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfblockRule());
					}
					add(
						$current,
						"ifcode",
						lv_ifcode_2_0,
						"org.sitemule.rpglanguage.Rpgle.Else");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		{
			newCompositeNode(grammarAccess.getIfblockAccess().getEndifParserRuleCall_3());
		}
		ruleEndif
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getIfAccess().getBooleanParserRuleCall_1());
		}
		this_Boolean_1=ruleBoolean
		{
			$current = $this_Boolean_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getIfAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getIfcodeCodeParserRuleCall_3_0());
				}
				lv_ifcode_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					add(
						$current,
						"ifcode",
						lv_ifcode_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleElseif
entryRuleElseif returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseifRule()); }
	iv_ruleElseif=ruleElseif
	{ $current=$iv_ruleElseif.current; }
	EOF;

// Rule Elseif
ruleElseif returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Elseif
		{
			newLeafNode(otherlv_0, grammarAccess.getElseifAccess().getElseifKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getElseifAccess().getBooleanParserRuleCall_1());
		}
		this_Boolean_1=ruleBoolean
		{
			$current = $this_Boolean_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getElseifAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseifAccess().getIfcodeCodeParserRuleCall_3_0());
				}
				lv_ifcode_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseifRule());
					}
					add(
						$current,
						"ifcode",
						lv_ifcode_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleElse
entryRuleElse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseRule()); }
	iv_ruleElse=ruleElse
	{ $current=$iv_ruleElse.current; }
	EOF;

// Rule Else
ruleElse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getElseAccess().getElseAction_0(),
					$current);
			}
		)
		otherlv_1=Else
		{
			newLeafNode(otherlv_1, grammarAccess.getElseAccess().getElseKeyword_1());
		}
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getElseAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseAccess().getIfcodeCodeParserRuleCall_3_0());
				}
				lv_ifcode_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseRule());
					}
					add(
						$current,
						"ifcode",
						lv_ifcode_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEndif
entryRuleEndif returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEndifRule()); }
	iv_ruleEndif=ruleEndif
	{ $current=$iv_ruleEndif.current.getText(); }
	EOF;

// Rule Endif
ruleEndif returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=Endif
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEndifAccess().getEndifKeyword());
	}
;

// Entry rule entryRuleDo
entryRuleDo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoRule()); }
	iv_ruleDo=ruleDo
	{ $current=$iv_ruleDo.current; }
	EOF;

// Rule Do
ruleDo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Do
		{
			newLeafNode(otherlv_0, grammarAccess.getDoAccess().getDoKeyword_0());
		}
		otherlv_1=Semicolon
		{
			newLeafNode(otherlv_1, grammarAccess.getDoAccess().getSemicolonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoAccess().getCodeCodeParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoRule());
					}
					add(
						$current,
						"code",
						lv_code_2_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=Enddo
		{
			newLeafNode(otherlv_3, grammarAccess.getDoAccess().getEnddoKeyword_3());
		}
		otherlv_4=Semicolon
		{
			newLeafNode(otherlv_4, grammarAccess.getDoAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDow
entryRuleDow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDowRule()); }
	iv_ruleDow=ruleDow
	{ $current=$iv_ruleDow.current; }
	EOF;

// Rule Dow
ruleDow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Dow
		{
			newLeafNode(otherlv_0, grammarAccess.getDowAccess().getDowKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDowAccess().getDowBooleanParserRuleCall_1_0());
				}
				lv_dow_1_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDowRule());
					}
					set(
						$current,
						"dow",
						lv_dow_1_0,
						"org.sitemule.rpglanguage.Rpgle.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getDowAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDowAccess().getCodeCodeParserRuleCall_3_0());
				}
				lv_code_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDowRule());
					}
					add(
						$current,
						"code",
						lv_code_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=Enddo
		{
			newLeafNode(otherlv_4, grammarAccess.getDowAccess().getEnddoKeyword_4());
		}
		otherlv_5=Semicolon
		{
			newLeafNode(otherlv_5, grammarAccess.getDowAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleDou
entryRuleDou returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDouRule()); }
	iv_ruleDou=ruleDou
	{ $current=$iv_ruleDou.current; }
	EOF;

// Rule Dou
ruleDou returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Dou
		{
			newLeafNode(otherlv_0, grammarAccess.getDouAccess().getDouKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDouAccess().getDouBooleanParserRuleCall_1_0());
				}
				lv_dou_1_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDouRule());
					}
					set(
						$current,
						"dou",
						lv_dou_1_0,
						"org.sitemule.rpglanguage.Rpgle.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getDouAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDouAccess().getCodeCodeParserRuleCall_3_0());
				}
				lv_code_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDouRule());
					}
					add(
						$current,
						"code",
						lv_code_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=Enddo
		{
			newLeafNode(otherlv_4, grammarAccess.getDouAccess().getEnddoKeyword_4());
		}
		otherlv_5=Semicolon
		{
			newLeafNode(otherlv_5, grammarAccess.getDouAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleFor
entryRuleFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForRule()); }
	iv_ruleFor=ruleFor
	{ $current=$iv_ruleFor.current; }
	EOF;

// Rule For
ruleFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=For
		{
			newLeafNode(otherlv_0, grammarAccess.getForAccess().getForKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getForAccess().getVarDclsCrossReference_1_0());
				}
			)
		)
		otherlv_2=EqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getForAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getFromExpressionParserRuleCall_3_0());
				}
				lv_from_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"from",
						lv_from_3_0,
						"org.sitemule.rpglanguage.Rpgle.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=To
		{
			newLeafNode(otherlv_4, grammarAccess.getForAccess().getToKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getToExpressionParserRuleCall_5_0());
				}
				lv_to_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"to",
						lv_to_5_0,
						"org.sitemule.rpglanguage.Rpgle.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Semicolon
		{
			newLeafNode(otherlv_6, grammarAccess.getForAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getCodeCodeParserRuleCall_7_0());
				}
				lv_code_7_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					add(
						$current,
						"code",
						lv_code_7_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8=Endfor
		{
			newLeafNode(otherlv_8, grammarAccess.getForAccess().getEndforKeyword_8());
		}
		otherlv_9=Semicolon
		{
			newLeafNode(otherlv_9, grammarAccess.getForAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleSelectblock
entryRuleSelectblock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectblockRule()); }
	iv_ruleSelectblock=ruleSelectblock
	{ $current=$iv_ruleSelectblock.current; }
	EOF;

// Rule Selectblock
ruleSelectblock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectblockAccess().getSelectblockAction_0(),
					$current);
			}
		)
		{
			newCompositeNode(grammarAccess.getSelectblockAccess().getSelectParserRuleCall_1());
		}
		ruleSelect
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectblockAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectblockAccess().getWhenWhenParserRuleCall_3_0());
				}
				lv_when_3_0=ruleWhen
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectblockRule());
					}
					set(
						$current,
						"when",
						lv_when_3_0,
						"org.sitemule.rpglanguage.Rpgle.When");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectblockAccess().getOtherOtherParserRuleCall_4_0());
				}
				lv_other_4_0=ruleOther
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectblockRule());
					}
					set(
						$current,
						"other",
						lv_other_4_0,
						"org.sitemule.rpglanguage.Rpgle.Other");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		{
			newCompositeNode(grammarAccess.getSelectblockAccess().getEndslParserRuleCall_5());
		}
		ruleEndsl
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current.getText(); }
	EOF;

// Rule Select
ruleSelect returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Select
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSelectAccess().getSelectKeyword_0());
		}
		kw=Semicolon
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSelectAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleWhen
entryRuleWhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenRule()); }
	iv_ruleWhen=ruleWhen
	{ $current=$iv_ruleWhen.current; }
	EOF;

// Rule When
ruleWhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=When
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenAccess().getWhenKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getWhenAccess().getBooleanParserRuleCall_1());
		}
		this_Boolean_1=ruleBoolean
		{
			$current = $this_Boolean_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getWhenAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getWhencodeCodeParserRuleCall_3_0());
				}
				lv_whencode_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					add(
						$current,
						"whencode",
						lv_whencode_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleOther
entryRuleOther returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherRule()); }
	iv_ruleOther=ruleOther
	{ $current=$iv_ruleOther.current; }
	EOF;

// Rule Other
ruleOther returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOtherAccess().getOtherAction_0(),
					$current);
			}
		)
		otherlv_1=Other
		{
			newLeafNode(otherlv_1, grammarAccess.getOtherAccess().getOtherKeyword_1());
		}
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getOtherAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherAccess().getOthercodeCodeParserRuleCall_3_0());
				}
				lv_othercode_3_0=ruleCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherRule());
					}
					add(
						$current,
						"othercode",
						lv_othercode_3_0,
						"org.sitemule.rpglanguage.Rpgle.Code");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEndsl
entryRuleEndsl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEndslRule()); }
	iv_ruleEndsl=ruleEndsl
	{ $current=$iv_ruleEndsl.current.getText(); }
	EOF;

// Rule Endsl
ruleEndsl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=Endsl
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEndslAccess().getEndslKeyword());
	}
;

// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	iv_ruleReturn=ruleReturn
	{ $current=$iv_ruleReturn.current; }
	EOF;

// Rule Return
ruleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnAccess().getReturnAction_0(),
					$current);
			}
		)
		otherlv_1=Return
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnRule());
					}
					add(
						$current,
						"expression",
						lv_expression_2_0,
						"org.sitemule.rpglanguage.Rpgle.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current; }
	EOF;

// Rule Boolean
ruleBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanAccess().getBooleanAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanAccess().getBoolexprsBoolExprParserRuleCall_1_0());
				}
				lv_boolexprs_1_0=ruleBoolExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanRule());
					}
					add(
						$current,
						"boolexprs",
						lv_boolexprs_1_0,
						"org.sitemule.rpglanguage.Rpgle.BoolExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleBoolExpr
entryRuleBoolExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolExprRule()); }
	iv_ruleBoolExpr=ruleBoolExpr
	{ $current=$iv_ruleBoolExpr.current; }
	EOF;

// Rule BoolExpr
ruleBoolExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Not
			{
				newLeafNode(otherlv_0, grammarAccess.getBoolExprAccess().getNotKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getBoolExprAccess().getOrExprParserRuleCall_1());
		}
		this_OrExpr_1=ruleOrExpr
		{
			$current = $this_OrExpr_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOrExpr
entryRuleOrExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExprRule()); }
	iv_ruleOrExpr=ruleOrExpr
	{ $current=$iv_ruleOrExpr.current; }
	EOF;

// Rule OrExpr
ruleOrExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0());
		}
		this_AndExpr_0=ruleAndExpr
		{
			$current = $this_AndExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExprAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=Or
			{
				newLeafNode(otherlv_2, grammarAccess.getOrExprAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.sitemule.rpglanguage.Rpgle.AndExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpr
entryRuleAndExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExprRule()); }
	iv_ruleAndExpr=ruleAndExpr
	{ $current=$iv_ruleAndExpr.current; }
	EOF;

// Rule AndExpr
ruleAndExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExprAccess().getPrimaryExprParserRuleCall_0());
		}
		this_PrimaryExpr_0=rulePrimaryExpr
		{
			$current = $this_PrimaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExprAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=And
			{
				newLeafNode(otherlv_2, grammarAccess.getAndExprAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExprAccess().getRightPrimaryExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.sitemule.rpglanguage.Rpgle.PrimaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current; }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getBoolExprParserRuleCall_0_1());
			}
			this_BoolExpr_1=ruleBoolExpr
			{
				$current = $this_BoolExpr_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExprAccess().getCompareParserRuleCall_1());
		}
		this_Compare_3=ruleCompare
		{
			$current = $this_Compare_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompare
entryRuleCompare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	iv_ruleCompare=ruleCompare
	{ $current=$iv_ruleCompare.current; }
	EOF;

// Rule Compare
ruleCompare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareAccess().getSpecSpecialParserRuleCall_0_0_0());
					}
					lv_spec_0_0=ruleSpecial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRule());
						}
						set(
							$current,
							"spec",
							lv_spec_0_0,
							"org.sitemule.rpglanguage.Rpgle.Special");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_intval2_1_0=RULE_INT
					{
						newLeafNode(lv_intval2_1_0, grammarAccess.getCompareAccess().getIntval2INTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompareRule());
						}
						setWithLastConsumed(
							$current,
							"intval2",
							lv_intval2_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			    |
			(
				(
					lv_strval2_2_0=RULE_STRING
					{
						newLeafNode(lv_strval2_2_0, grammarAccess.getCompareAccess().getStrval2STRINGTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompareRule());
						}
						setWithLastConsumed(
							$current,
							"strval2",
							lv_strval2_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompareRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getCompareAccess().getVar2DclsCrossReference_0_3_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareAccess().getBif2BifParserRuleCall_0_4_0());
					}
					lv_bif2_4_0=ruleBif
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRule());
						}
						set(
							$current,
							"bif2",
							lv_bif2_4_0,
							"org.sitemule.rpglanguage.Rpgle.Bif");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareAccess().getCmpCompare2ParserRuleCall_1_0());
				}
				lv_cmp_5_0=ruleCompare2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareRule());
					}
					set(
						$current,
						"cmp",
						lv_cmp_5_0,
						"org.sitemule.rpglanguage.Rpgle.Compare2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleCompare2
entryRuleCompare2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompare2Rule()); }
	iv_ruleCompare2=ruleCompare2
	{ $current=$iv_ruleCompare2.current; }
	EOF;

// Rule Compare2
ruleCompare2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=GreaterThanSign
			{
				newLeafNode(otherlv_0, grammarAccess.getCompare2Access().getGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1=LessThanSign
			{
				newLeafNode(otherlv_1, grammarAccess.getCompare2Access().getLessThanSignKeyword_0_1());
			}
			    |
			otherlv_2=EqualsSign
			{
				newLeafNode(otherlv_2, grammarAccess.getCompare2Access().getEqualsSignKeyword_0_2());
			}
			    |
			otherlv_3=GreaterThanSignEqualsSign
			{
				newLeafNode(otherlv_3, grammarAccess.getCompare2Access().getGreaterThanSignEqualsSignKeyword_0_3());
			}
			    |
			otherlv_4=LessThanSignEqualsSign
			{
				newLeafNode(otherlv_4, grammarAccess.getCompare2Access().getLessThanSignEqualsSignKeyword_0_4());
			}
		)
		{
			newCompositeNode(grammarAccess.getCompare2Access().getCompareRightParserRuleCall_1());
		}
		this_CompareRight_5=ruleCompareRight
		{
			$current = $this_CompareRight_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompareRight
entryRuleCompareRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareRightRule()); }
	iv_ruleCompareRight=ruleCompareRight
	{ $current=$iv_ruleCompareRight.current; }
	EOF;

// Rule CompareRight
ruleCompareRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareRightAccess().getSpecSpecialParserRuleCall_0_0_0());
					}
					lv_spec_0_0=ruleSpecial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRightRule());
						}
						set(
							$current,
							"spec",
							lv_spec_0_0,
							"org.sitemule.rpglanguage.Rpgle.Special");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_intval2_1_0=RULE_INT
					{
						newLeafNode(lv_intval2_1_0, grammarAccess.getCompareRightAccess().getIntval2INTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompareRightRule());
						}
						setWithLastConsumed(
							$current,
							"intval2",
							lv_intval2_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			    |
			(
				(
					lv_strval2_2_0=RULE_STRING
					{
						newLeafNode(lv_strval2_2_0, grammarAccess.getCompareRightAccess().getStrval2STRINGTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompareRightRule());
						}
						setWithLastConsumed(
							$current,
							"strval2",
							lv_strval2_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompareRightRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getCompareRightAccess().getVar2DclsCrossReference_0_3_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareRightAccess().getBif2BifParserRuleCall_0_4_0());
					}
					lv_bif2_4_0=ruleBif
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRightRule());
						}
						set(
							$current,
							"bif2",
							lv_bif2_4_0,
							"org.sitemule.rpglanguage.Rpgle.Bif");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareRightAccess().getCmpCompare2ParserRuleCall_1_0());
				}
				lv_cmp_5_0=ruleCompare2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareRightRule());
					}
					set(
						$current,
						"cmp",
						lv_cmp_5_0,
						"org.sitemule.rpglanguage.Rpgle.Compare2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSpecial
entryRuleSpecial returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSpecialRule()); }
	iv_ruleSpecial=ruleSpecial
	{ $current=$iv_ruleSpecial.current.getText(); }
	EOF;

// Rule Special
ruleSpecial returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IND_0=RULE_IND
		{
			$current.merge(this_IND_0);
		}
		{
			newLeafNode(this_IND_0, grammarAccess.getSpecialAccess().getINDTerminalRuleCall_0());
		}
		    |
		kw=INLR
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getINLRKeyword_1());
		}
		    |
		kw=INH1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getINH1Keyword_2());
		}
		    |
		kw=ON
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getONKeyword_3());
		}
		    |
		kw=OFF
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getOFFKeyword_4());
		}
		    |
		kw=ZEROS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getZEROSKeyword_5());
		}
		    |
		kw=ZERO
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getZEROKeyword_6());
		}
		    |
		kw=BLANK
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getBLANKKeyword_7());
		}
		    |
		kw=BLANKS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getBLANKSKeyword_8());
		}
		    |
		kw=HIVAL
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getHIVALKeyword_9());
		}
		    |
		kw=LOVAL
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSpecialAccess().getLOVALKeyword_10());
		}
	)
;

// Entry rule entryRuleDcls
entryRuleDcls returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDclsRule()); }
	iv_ruleDcls=ruleDcls
	{ $current=$iv_ruleDcls.current; }
	EOF;

// Rule Dcls
ruleDcls returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DclS
		{
			newLeafNode(otherlv_0, grammarAccess.getDclsAccess().getDclSKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDclsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDclsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDclsAccess().getDatatypeDatatypeParserRuleCall_2_0());
				}
				lv_datatype_2_0=ruleDatatype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDclsRule());
					}
					set(
						$current,
						"datatype",
						lv_datatype_2_0,
						"org.sitemule.rpglanguage.Rpgle.Datatype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDclsAccess().getOptionsOptionsParserRuleCall_3_0());
				}
				lv_options_3_0=ruleOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDclsRule());
					}
					set(
						$current,
						"options",
						lv_options_3_0,
						"org.sitemule.rpglanguage.Rpgle.Options");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=Semicolon
		{
			newLeafNode(otherlv_4, grammarAccess.getDclsAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDatatype
entryRuleDatatype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatatypeRule()); }
	iv_ruleDatatype=ruleDatatype
	{ $current=$iv_ruleDatatype.current; }
	EOF;

// Rule Datatype
ruleDatatype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Char
			{
				newLeafNode(otherlv_0, grammarAccess.getDatatypeAccess().getCharKeyword_0_0());
			}
			    |
			otherlv_1=Varchar
			{
				newLeafNode(otherlv_1, grammarAccess.getDatatypeAccess().getVarcharKeyword_0_1());
			}
			    |
			otherlv_2=Int
			{
				newLeafNode(otherlv_2, grammarAccess.getDatatypeAccess().getIntKeyword_0_2());
			}
			    |
			otherlv_3=Dec
			{
				newLeafNode(otherlv_3, grammarAccess.getDatatypeAccess().getDecKeyword_0_3());
			}
			    |
			otherlv_4=Date
			{
				newLeafNode(otherlv_4, grammarAccess.getDatatypeAccess().getDateKeyword_0_4());
			}
			    |
			otherlv_5=Timestamp
			{
				newLeafNode(otherlv_5, grammarAccess.getDatatypeAccess().getTimestampKeyword_0_5());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDatatypeAccess().getLenLenParserRuleCall_1_0());
				}
				lv_len_6_0=ruleLen
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatatypeRule());
					}
					set(
						$current,
						"len",
						lv_len_6_0,
						"org.sitemule.rpglanguage.Rpgle.Len");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLen
entryRuleLen returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLenRule()); }
	iv_ruleLen=ruleLen
	{ $current=$iv_ruleLen.current.getText(); }
	EOF;

// Rule Len
ruleLen returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=LeftParenthesis
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLenAccess().getLeftParenthesisKeyword_0());
		}
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getLenAccess().getINTTerminalRuleCall_1());
		}
		kw=RightParenthesis
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLenAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleOptions
entryRuleOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionsRule()); }
	iv_ruleOptions=ruleOptions
	{ $current=$iv_ruleOptions.current; }
	EOF;

// Rule Options
ruleOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Options
		{
			newLeafNode(otherlv_0, grammarAccess.getOptionsAccess().getOptionsKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getOptionsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_val_2_0=RULE_STRING
				{
					newLeafNode(lv_val_2_0, grammarAccess.getOptionsAccess().getValSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptionsRule());
					}
					setWithLastConsumed(
						$current,
						"val",
						lv_val_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getOptionsAccess().getRightParenthesisKeyword_3());
		}
	)
;
