/**
 * generated by Xtext 2.19.0
 */
package org.sitemule.rpglanguage.rpgle.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sitemule.rpglanguage.rpgle.Bif;
import org.sitemule.rpglanguage.rpgle.Compare2;
import org.sitemule.rpglanguage.rpgle.CompareRight;
import org.sitemule.rpglanguage.rpgle.Dcls;
import org.sitemule.rpglanguage.rpgle.RpglePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Compare Right</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sitemule.rpglanguage.rpgle.impl.CompareRightImpl#getSpec <em>Spec</em>}</li>
 *   <li>{@link org.sitemule.rpglanguage.rpgle.impl.CompareRightImpl#getIntval2 <em>Intval2</em>}</li>
 *   <li>{@link org.sitemule.rpglanguage.rpgle.impl.CompareRightImpl#getStrval2 <em>Strval2</em>}</li>
 *   <li>{@link org.sitemule.rpglanguage.rpgle.impl.CompareRightImpl#getVar2 <em>Var2</em>}</li>
 *   <li>{@link org.sitemule.rpglanguage.rpgle.impl.CompareRightImpl#getBif2 <em>Bif2</em>}</li>
 *   <li>{@link org.sitemule.rpglanguage.rpgle.impl.CompareRightImpl#getCmp <em>Cmp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompareRightImpl extends Compare2Impl implements CompareRight
{
  /**
   * The default value of the '{@link #getSpec() <em>Spec</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpec()
   * @generated
   * @ordered
   */
  protected static final String SPEC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSpec() <em>Spec</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpec()
   * @generated
   * @ordered
   */
  protected String spec = SPEC_EDEFAULT;

  /**
   * The default value of the '{@link #getIntval2() <em>Intval2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntval2()
   * @generated
   * @ordered
   */
  protected static final int INTVAL2_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIntval2() <em>Intval2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntval2()
   * @generated
   * @ordered
   */
  protected int intval2 = INTVAL2_EDEFAULT;

  /**
   * The default value of the '{@link #getStrval2() <em>Strval2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrval2()
   * @generated
   * @ordered
   */
  protected static final String STRVAL2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStrval2() <em>Strval2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrval2()
   * @generated
   * @ordered
   */
  protected String strval2 = STRVAL2_EDEFAULT;

  /**
   * The cached value of the '{@link #getVar2() <em>Var2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar2()
   * @generated
   * @ordered
   */
  protected Dcls var2;

  /**
   * The cached value of the '{@link #getBif2() <em>Bif2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBif2()
   * @generated
   * @ordered
   */
  protected Bif bif2;

  /**
   * The cached value of the '{@link #getCmp() <em>Cmp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCmp()
   * @generated
   * @ordered
   */
  protected Compare2 cmp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompareRightImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RpglePackage.Literals.COMPARE_RIGHT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSpec()
  {
    return spec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpec(String newSpec)
  {
    String oldSpec = spec;
    spec = newSpec;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__SPEC, oldSpec, spec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getIntval2()
  {
    return intval2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntval2(int newIntval2)
  {
    int oldIntval2 = intval2;
    intval2 = newIntval2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__INTVAL2, oldIntval2, intval2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStrval2()
  {
    return strval2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStrval2(String newStrval2)
  {
    String oldStrval2 = strval2;
    strval2 = newStrval2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__STRVAL2, oldStrval2, strval2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Dcls getVar2()
  {
    if (var2 != null && var2.eIsProxy())
    {
      InternalEObject oldVar2 = (InternalEObject)var2;
      var2 = (Dcls)eResolveProxy(oldVar2);
      if (var2 != oldVar2)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RpglePackage.COMPARE_RIGHT__VAR2, oldVar2, var2));
      }
    }
    return var2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dcls basicGetVar2()
  {
    return var2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVar2(Dcls newVar2)
  {
    Dcls oldVar2 = var2;
    var2 = newVar2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__VAR2, oldVar2, var2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Bif getBif2()
  {
    return bif2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBif2(Bif newBif2, NotificationChain msgs)
  {
    Bif oldBif2 = bif2;
    bif2 = newBif2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__BIF2, oldBif2, newBif2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBif2(Bif newBif2)
  {
    if (newBif2 != bif2)
    {
      NotificationChain msgs = null;
      if (bif2 != null)
        msgs = ((InternalEObject)bif2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RpglePackage.COMPARE_RIGHT__BIF2, null, msgs);
      if (newBif2 != null)
        msgs = ((InternalEObject)newBif2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RpglePackage.COMPARE_RIGHT__BIF2, null, msgs);
      msgs = basicSetBif2(newBif2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__BIF2, newBif2, newBif2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Compare2 getCmp()
  {
    return cmp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCmp(Compare2 newCmp, NotificationChain msgs)
  {
    Compare2 oldCmp = cmp;
    cmp = newCmp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__CMP, oldCmp, newCmp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCmp(Compare2 newCmp)
  {
    if (newCmp != cmp)
    {
      NotificationChain msgs = null;
      if (cmp != null)
        msgs = ((InternalEObject)cmp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RpglePackage.COMPARE_RIGHT__CMP, null, msgs);
      if (newCmp != null)
        msgs = ((InternalEObject)newCmp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RpglePackage.COMPARE_RIGHT__CMP, null, msgs);
      msgs = basicSetCmp(newCmp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RpglePackage.COMPARE_RIGHT__CMP, newCmp, newCmp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RpglePackage.COMPARE_RIGHT__BIF2:
        return basicSetBif2(null, msgs);
      case RpglePackage.COMPARE_RIGHT__CMP:
        return basicSetCmp(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RpglePackage.COMPARE_RIGHT__SPEC:
        return getSpec();
      case RpglePackage.COMPARE_RIGHT__INTVAL2:
        return getIntval2();
      case RpglePackage.COMPARE_RIGHT__STRVAL2:
        return getStrval2();
      case RpglePackage.COMPARE_RIGHT__VAR2:
        if (resolve) return getVar2();
        return basicGetVar2();
      case RpglePackage.COMPARE_RIGHT__BIF2:
        return getBif2();
      case RpglePackage.COMPARE_RIGHT__CMP:
        return getCmp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RpglePackage.COMPARE_RIGHT__SPEC:
        setSpec((String)newValue);
        return;
      case RpglePackage.COMPARE_RIGHT__INTVAL2:
        setIntval2((Integer)newValue);
        return;
      case RpglePackage.COMPARE_RIGHT__STRVAL2:
        setStrval2((String)newValue);
        return;
      case RpglePackage.COMPARE_RIGHT__VAR2:
        setVar2((Dcls)newValue);
        return;
      case RpglePackage.COMPARE_RIGHT__BIF2:
        setBif2((Bif)newValue);
        return;
      case RpglePackage.COMPARE_RIGHT__CMP:
        setCmp((Compare2)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RpglePackage.COMPARE_RIGHT__SPEC:
        setSpec(SPEC_EDEFAULT);
        return;
      case RpglePackage.COMPARE_RIGHT__INTVAL2:
        setIntval2(INTVAL2_EDEFAULT);
        return;
      case RpglePackage.COMPARE_RIGHT__STRVAL2:
        setStrval2(STRVAL2_EDEFAULT);
        return;
      case RpglePackage.COMPARE_RIGHT__VAR2:
        setVar2((Dcls)null);
        return;
      case RpglePackage.COMPARE_RIGHT__BIF2:
        setBif2((Bif)null);
        return;
      case RpglePackage.COMPARE_RIGHT__CMP:
        setCmp((Compare2)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RpglePackage.COMPARE_RIGHT__SPEC:
        return SPEC_EDEFAULT == null ? spec != null : !SPEC_EDEFAULT.equals(spec);
      case RpglePackage.COMPARE_RIGHT__INTVAL2:
        return intval2 != INTVAL2_EDEFAULT;
      case RpglePackage.COMPARE_RIGHT__STRVAL2:
        return STRVAL2_EDEFAULT == null ? strval2 != null : !STRVAL2_EDEFAULT.equals(strval2);
      case RpglePackage.COMPARE_RIGHT__VAR2:
        return var2 != null;
      case RpglePackage.COMPARE_RIGHT__BIF2:
        return bif2 != null;
      case RpglePackage.COMPARE_RIGHT__CMP:
        return cmp != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (spec: ");
    result.append(spec);
    result.append(", intval2: ");
    result.append(intval2);
    result.append(", strval2: ");
    result.append(strval2);
    result.append(')');
    return result.toString();
  }

} //CompareRightImpl
