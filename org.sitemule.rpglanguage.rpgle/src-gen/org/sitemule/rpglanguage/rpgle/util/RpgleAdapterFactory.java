/**
 * generated by Xtext 2.19.0
 */
package org.sitemule.rpglanguage.rpgle.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.sitemule.rpglanguage.rpgle.And;
import org.sitemule.rpglanguage.rpgle.Assignment;
import org.sitemule.rpglanguage.rpgle.Bif;
import org.sitemule.rpglanguage.rpgle.BoolExpr;
import org.sitemule.rpglanguage.rpgle.Chain;
import org.sitemule.rpglanguage.rpgle.Close;
import org.sitemule.rpglanguage.rpgle.Code;
import org.sitemule.rpglanguage.rpgle.Compare;
import org.sitemule.rpglanguage.rpgle.Compare2;
import org.sitemule.rpglanguage.rpgle.CompareRight;
import org.sitemule.rpglanguage.rpgle.Components;
import org.sitemule.rpglanguage.rpgle.Ctrlopt;
import org.sitemule.rpglanguage.rpgle.Datatype;
import org.sitemule.rpglanguage.rpgle.Dclf;
import org.sitemule.rpglanguage.rpgle.Dclproc;
import org.sitemule.rpglanguage.rpgle.Dcls;
import org.sitemule.rpglanguage.rpgle.Declare;
import org.sitemule.rpglanguage.rpgle.Directive;
import org.sitemule.rpglanguage.rpgle.Do;
import org.sitemule.rpglanguage.rpgle.Dou;
import org.sitemule.rpglanguage.rpgle.Dow;
import org.sitemule.rpglanguage.rpgle.Else;
import org.sitemule.rpglanguage.rpgle.Elseif;
import org.sitemule.rpglanguage.rpgle.Eof;
import org.sitemule.rpglanguage.rpgle.Expression;
import org.sitemule.rpglanguage.rpgle.Exsr;
import org.sitemule.rpglanguage.rpgle.Fileio;
import org.sitemule.rpglanguage.rpgle.For;
import org.sitemule.rpglanguage.rpgle.If;
import org.sitemule.rpglanguage.rpgle.Ifblock;
import org.sitemule.rpglanguage.rpgle.Language;
import org.sitemule.rpglanguage.rpgle.Open;
import org.sitemule.rpglanguage.rpgle.Opt;
import org.sitemule.rpglanguage.rpgle.Options;
import org.sitemule.rpglanguage.rpgle.Or;
import org.sitemule.rpglanguage.rpgle.Other;
import org.sitemule.rpglanguage.rpgle.Parm1;
import org.sitemule.rpglanguage.rpgle.Parm2;
import org.sitemule.rpglanguage.rpgle.Parmlist;
import org.sitemule.rpglanguage.rpgle.Read;
import org.sitemule.rpglanguage.rpgle.Reade;
import org.sitemule.rpglanguage.rpgle.Return;
import org.sitemule.rpglanguage.rpgle.Rnf;
import org.sitemule.rpglanguage.rpgle.RpglePackage;
import org.sitemule.rpglanguage.rpgle.Selectblock;
import org.sitemule.rpglanguage.rpgle.Setgt;
import org.sitemule.rpglanguage.rpgle.Setll;
import org.sitemule.rpglanguage.rpgle.Stmt;
import org.sitemule.rpglanguage.rpgle.Subrutine;
import org.sitemule.rpglanguage.rpgle.When;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.sitemule.rpglanguage.rpgle.RpglePackage
 * @generated
 */
public class RpgleAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RpglePackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RpgleAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = RpglePackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RpgleSwitch<Adapter> modelSwitch =
    new RpgleSwitch<Adapter>()
    {
      @Override
      public Adapter caseLanguage(Language object)
      {
        return createLanguageAdapter();
      }
      @Override
      public Adapter caseComponents(Components object)
      {
        return createComponentsAdapter();
      }
      @Override
      public Adapter caseCtrlopt(Ctrlopt object)
      {
        return createCtrloptAdapter();
      }
      @Override
      public Adapter caseOpt(Opt object)
      {
        return createOptAdapter();
      }
      @Override
      public Adapter caseDirective(Directive object)
      {
        return createDirectiveAdapter();
      }
      @Override
      public Adapter caseDeclare(Declare object)
      {
        return createDeclareAdapter();
      }
      @Override
      public Adapter caseDclf(Dclf object)
      {
        return createDclfAdapter();
      }
      @Override
      public Adapter caseFileio(Fileio object)
      {
        return createFileioAdapter();
      }
      @Override
      public Adapter caseOpen(Open object)
      {
        return createOpenAdapter();
      }
      @Override
      public Adapter caseClose(Close object)
      {
        return createCloseAdapter();
      }
      @Override
      public Adapter caseChain(Chain object)
      {
        return createChainAdapter();
      }
      @Override
      public Adapter caseRead(Read object)
      {
        return createReadAdapter();
      }
      @Override
      public Adapter caseReade(Reade object)
      {
        return createReadeAdapter();
      }
      @Override
      public Adapter caseSetll(Setll object)
      {
        return createSetllAdapter();
      }
      @Override
      public Adapter caseSetgt(Setgt object)
      {
        return createSetgtAdapter();
      }
      @Override
      public Adapter caseEof(Eof object)
      {
        return createEofAdapter();
      }
      @Override
      public Adapter caseRnf(Rnf object)
      {
        return createRnfAdapter();
      }
      @Override
      public Adapter caseDclproc(Dclproc object)
      {
        return createDclprocAdapter();
      }
      @Override
      public Adapter caseCode(Code object)
      {
        return createCodeAdapter();
      }
      @Override
      public Adapter caseSubrutine(Subrutine object)
      {
        return createSubrutineAdapter();
      }
      @Override
      public Adapter caseExsr(Exsr object)
      {
        return createExsrAdapter();
      }
      @Override
      public Adapter caseStmt(Stmt object)
      {
        return createStmtAdapter();
      }
      @Override
      public Adapter caseAssignment(Assignment object)
      {
        return createAssignmentAdapter();
      }
      @Override
      public Adapter caseExpression(Expression object)
      {
        return createExpressionAdapter();
      }
      @Override
      public Adapter caseBif(Bif object)
      {
        return createBifAdapter();
      }
      @Override
      public Adapter caseParmlist(Parmlist object)
      {
        return createParmlistAdapter();
      }
      @Override
      public Adapter caseParm1(Parm1 object)
      {
        return createParm1Adapter();
      }
      @Override
      public Adapter caseParm2(Parm2 object)
      {
        return createParm2Adapter();
      }
      @Override
      public Adapter caseIfblock(Ifblock object)
      {
        return createIfblockAdapter();
      }
      @Override
      public Adapter caseIf(If object)
      {
        return createIfAdapter();
      }
      @Override
      public Adapter caseElseif(Elseif object)
      {
        return createElseifAdapter();
      }
      @Override
      public Adapter caseElse(Else object)
      {
        return createElseAdapter();
      }
      @Override
      public Adapter caseDo(Do object)
      {
        return createDoAdapter();
      }
      @Override
      public Adapter caseDow(Dow object)
      {
        return createDowAdapter();
      }
      @Override
      public Adapter caseDou(Dou object)
      {
        return createDouAdapter();
      }
      @Override
      public Adapter caseFor(For object)
      {
        return createForAdapter();
      }
      @Override
      public Adapter caseSelectblock(Selectblock object)
      {
        return createSelectblockAdapter();
      }
      @Override
      public Adapter caseWhen(When object)
      {
        return createWhenAdapter();
      }
      @Override
      public Adapter caseOther(Other object)
      {
        return createOtherAdapter();
      }
      @Override
      public Adapter caseReturn(Return object)
      {
        return createReturnAdapter();
      }
      @Override
      public Adapter caseBoolean(org.sitemule.rpglanguage.rpgle.Boolean object)
      {
        return createBooleanAdapter();
      }
      @Override
      public Adapter caseBoolExpr(BoolExpr object)
      {
        return createBoolExprAdapter();
      }
      @Override
      public Adapter caseCompare(Compare object)
      {
        return createCompareAdapter();
      }
      @Override
      public Adapter caseCompare2(Compare2 object)
      {
        return createCompare2Adapter();
      }
      @Override
      public Adapter caseCompareRight(CompareRight object)
      {
        return createCompareRightAdapter();
      }
      @Override
      public Adapter caseDcls(Dcls object)
      {
        return createDclsAdapter();
      }
      @Override
      public Adapter caseDatatype(Datatype object)
      {
        return createDatatypeAdapter();
      }
      @Override
      public Adapter caseOptions(Options object)
      {
        return createOptionsAdapter();
      }
      @Override
      public Adapter caseOr(Or object)
      {
        return createOrAdapter();
      }
      @Override
      public Adapter caseAnd(And object)
      {
        return createAndAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Language <em>Language</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Language
   * @generated
   */
  public Adapter createLanguageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Components <em>Components</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Components
   * @generated
   */
  public Adapter createComponentsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Ctrlopt <em>Ctrlopt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Ctrlopt
   * @generated
   */
  public Adapter createCtrloptAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Opt <em>Opt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Opt
   * @generated
   */
  public Adapter createOptAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Directive <em>Directive</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Directive
   * @generated
   */
  public Adapter createDirectiveAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Declare <em>Declare</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Declare
   * @generated
   */
  public Adapter createDeclareAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Dclf <em>Dclf</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Dclf
   * @generated
   */
  public Adapter createDclfAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Fileio <em>Fileio</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Fileio
   * @generated
   */
  public Adapter createFileioAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Open <em>Open</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Open
   * @generated
   */
  public Adapter createOpenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Close <em>Close</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Close
   * @generated
   */
  public Adapter createCloseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Chain <em>Chain</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Chain
   * @generated
   */
  public Adapter createChainAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Read <em>Read</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Read
   * @generated
   */
  public Adapter createReadAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Reade <em>Reade</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Reade
   * @generated
   */
  public Adapter createReadeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Setll <em>Setll</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Setll
   * @generated
   */
  public Adapter createSetllAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Setgt <em>Setgt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Setgt
   * @generated
   */
  public Adapter createSetgtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Eof <em>Eof</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Eof
   * @generated
   */
  public Adapter createEofAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Rnf <em>Rnf</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Rnf
   * @generated
   */
  public Adapter createRnfAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Dclproc <em>Dclproc</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Dclproc
   * @generated
   */
  public Adapter createDclprocAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Code <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Code
   * @generated
   */
  public Adapter createCodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Subrutine <em>Subrutine</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Subrutine
   * @generated
   */
  public Adapter createSubrutineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Exsr <em>Exsr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Exsr
   * @generated
   */
  public Adapter createExsrAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Stmt <em>Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Stmt
   * @generated
   */
  public Adapter createStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Assignment
   * @generated
   */
  public Adapter createAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Expression
   * @generated
   */
  public Adapter createExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Bif <em>Bif</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Bif
   * @generated
   */
  public Adapter createBifAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Parmlist <em>Parmlist</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Parmlist
   * @generated
   */
  public Adapter createParmlistAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Parm1 <em>Parm1</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Parm1
   * @generated
   */
  public Adapter createParm1Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Parm2 <em>Parm2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Parm2
   * @generated
   */
  public Adapter createParm2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Ifblock <em>Ifblock</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Ifblock
   * @generated
   */
  public Adapter createIfblockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.If <em>If</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.If
   * @generated
   */
  public Adapter createIfAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Elseif <em>Elseif</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Elseif
   * @generated
   */
  public Adapter createElseifAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Else <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Else
   * @generated
   */
  public Adapter createElseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Do <em>Do</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Do
   * @generated
   */
  public Adapter createDoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Dow <em>Dow</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Dow
   * @generated
   */
  public Adapter createDowAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Dou <em>Dou</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Dou
   * @generated
   */
  public Adapter createDouAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.For <em>For</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.For
   * @generated
   */
  public Adapter createForAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Selectblock <em>Selectblock</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Selectblock
   * @generated
   */
  public Adapter createSelectblockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.When <em>When</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.When
   * @generated
   */
  public Adapter createWhenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Other <em>Other</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Other
   * @generated
   */
  public Adapter createOtherAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Return <em>Return</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Return
   * @generated
   */
  public Adapter createReturnAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Boolean <em>Boolean</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Boolean
   * @generated
   */
  public Adapter createBooleanAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.BoolExpr <em>Bool Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.BoolExpr
   * @generated
   */
  public Adapter createBoolExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Compare <em>Compare</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Compare
   * @generated
   */
  public Adapter createCompareAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Compare2 <em>Compare2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Compare2
   * @generated
   */
  public Adapter createCompare2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.CompareRight <em>Compare Right</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.CompareRight
   * @generated
   */
  public Adapter createCompareRightAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Dcls <em>Dcls</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Dcls
   * @generated
   */
  public Adapter createDclsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Datatype <em>Datatype</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Datatype
   * @generated
   */
  public Adapter createDatatypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Options <em>Options</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Options
   * @generated
   */
  public Adapter createOptionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.Or
   * @generated
   */
  public Adapter createOrAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sitemule.rpglanguage.rpgle.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sitemule.rpglanguage.rpgle.And
   * @generated
   */
  public Adapter createAndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //RpgleAdapterFactory
